#! /usr/bin/ruby

$:.unshift(File::join(File::dirname(__FILE__), '..', 'lib'))
require 'gdv'
require 'optparse'

PROGNAME = File::basename(__FILE__)

verbose = false
brief = false
convert = false
full = false
debug = false
GDV::logger = Logger.new(STDOUT)
GDV::logger.level = Logger::WARN

options = OptionParser.new do |opts|
    opts.on('-v', '--verbose', 'verbose operation') do |dummy|
        verbose = true
        GDV::logger.level = Logger::INFO unless debug
    end
    opts.on('-d', '--debug', 'debug output') do |dummy|
        debug = true
        GDV::logger.level = Logger::DEBUG
    end
    opts.on('-b', '--brief', 'brief output') { |_| brief = true }
    opts.on('-c', '--convert', 'convert field values') { |_| convert = true }
    opts.on('-f', '--full', 'show empty fields') { |_| full = true }
end

options.banner = "#{PROGNAME} [OPTIONS] FILE"
options.parse!
unless ARGV.size == 1
    $stderr.puts "error: you need to specify a GDV input file"
    $stderr.puts options
    exit 1
end

begin
    GDV::Format::Classifier.instance
rescue GDV::Format::FormatError => e
    puts "Inconsistent parse tables"
    if verbose
        puts "Index tree is"
        puts GDV::Format::Classifier::instance.recindex.print
        puts
    end
    puts e.message
    exit 1
end
File::open("/tmp/tree.txt", "w") { |f| f.puts GDV::Format::Classifier::instance::recindex::print }

r = GDV::Format::Reader.new(ARGV[0])
loop do
    begin
        rec = r.getrec
        break if rec.nil?
        puts "#{rec.satz}.#{rec.sparte}"
        unless brief
            rec.lines.each do |l|
                l.part.fields.each do |f|
                    v = convert ? l[f.nr] : l.raw(f.nr)
                    blank = v.strip.empty?
                    next if (v.nil? || blank) && !full
                    s = convert ? "#{v.class.name}" : "#{v.size}"
                    lbl = f.label.nil? ? f.type.to_s : f.label[0,29]
                    printf "%2d %-30s %-20s [%s]\n", f.nr, lbl + ":", v, s
                end
                if l == rec.lines.last
                    puts "=" * 70
                else
                    puts "-" * 70
                end
            end
        end
    end
end
puts "#{r.lineno} Saetze, #{r.unknown} unerkannt"
